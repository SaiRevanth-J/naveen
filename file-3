properties([
    parameters([
        [$class: 'DateParameterDefinition', dateFormat: 'yyyy-MM-dd HH:mm:ss', defaultValue: 'LocalDateTime.now()', description: 'Select Maintenance Start Time in UTC', name: 'STARTTIME'], 
            [$class: 'DateParameterDefinition', dateFormat: 'yyyy-MM-dd HH:mm:ss', defaultValue: 'LocalDateTime.now().plusHours(4);', description: 'Select Maintenance End Time in UTC', name: 'ENDTIME'],
            [$class: 'ChoiceParameter', choiceType: 'PT_CHECKBOX', description: 'Select POD', filterLength: 1, filterable: true, name: 'POD', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: true, script: 'return "error"'], script: [classpath: [], sandbox: true, script: '''def choices=[];\ntextFile=new File("/data/gitws/${repo}/jenkins/constants/parameters");\ntextFile.eachLine{ line ->\nif(line.startsWith(\'POD\')) {\nline.split(\'=\')[1].split(\',\').each {\nchoices.add(it)\n}}}\nreturn choices''']]],
            [$class: 'ChoiceParameter', choiceType: 'PT_CHECKBOX', description: 'Select Release', filterLength: 1, filterable: false, name: 'RELEASE', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: true, script: 'return \'error\''], script: [classpath: [], sandbox: true, script: '''def choices=[];\ntextFile=new File("/data/gitws/${repo}/jenkins/constants/parameters");\ntextFile.eachLine{ line ->\nif(line.startsWith(\'RELEASE\')) {\nline.split(\'=\')[1].split(\',\').each {\nchoices.add(it)\n}}}\nreturn choices''']]],
            [$class: 'ChoiceParameter', choiceType: 'PT_SINGLE_SELECT', description: 'Select Application Environment', filterLength: 1, filterable: false, name: 'APPLICATIONENV', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: true, script: 'return \'error\''], script: [classpath: [], sandbox: true, script: '''def choices=[];\ntextFile=new File("/data/gitws/${repo}/jenkins/constants/parameters");\ntextFile.eachLine{ line ->\nif(line.startsWith(\'APPLICATIONENV\')) {\nline.split(\'=\')[1].split(\',\').each {\nchoices.add(it)\n}}}\nreturn choices''']]],
            [$class: 'ChoiceParameter', choiceType: 'PT_CHECKBOX', description: 'Select Businessunit(s)', filterLength: 1, filterable: false, name: 'BUSINESSUNIT', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: true, script: 'return "error"'], script: [classpath: [], sandbox: true, script: '''def choices=[];\ntextFile=new File("/data/gitws/${repo}/jenkins/constants/parameters");\ntextFile.eachLine{ line ->\nif(line.startsWith(\'BUSINESSUNIT\')) {\nline.split(\'=\')[1].split(\',\').each {\nchoices.add(it)\n}}}\nreturn choices''']]],
            string(defaultValue: '', description: 'Enter name for maintenance, default will be in following format: ${POD} ${APPLICATIONENV} R35 Upgrade ${RELEASE} Nodes', name: 'MAINTENANCE_NAME', trim: true)
    ])
])

